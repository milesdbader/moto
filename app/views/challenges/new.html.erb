
<div class="container" style='height: 100vh !important;'>
  <div class="row title-wrap">
    <%= link_to challenges_path do %>
      <i class="fas fa-chevron-left back" id="back"></i>
    <% end %>
    <h2 class="purple-text"><strong>New Challenge</strong></h2>
  </div>
  <br>
  <div class="combined-players-wrap">
    <div class="challenger">
      <p><strong><%= @user.username %></strong></p>
      <%= cl_image_tag @user.photo.key, alt: "Profiloto",
      width: 80,
      height: 80,
      gravity: "face",
      crop: "thumb",
      cloud_name: "dtrwqimx6",
      class: 'dash-avatar' %>

    </div>
    <h2 class="vs">vs</h2>
    <div class="opponent-wrap text-center">
      <p id="opponent" data-user=''>Opponent</p>
        <div class="c-avatar">
         <!--  <h3 id="question"><strong>?</strong></h3> -->
          <img src="https://res.cloudinary.com/dtrwqimx6/image/upload/v1583255519/Screenshot_from_2020-03-03_19-11-40_aor2lc.png" alt="">
      </div>
    </div>
  </div>
      <div class="row new-one">
        <div class="numberCircle"><strong>1</strong></div>
        <div class='mt-2'>
          <h3>Choose your Opponent</h3>
        </div>
          <div class='align-items-center'>

          <div class='challenge-search-wrap'>
            <%= text_field_tag(:search, params[:search], placeholder: 'Search by username', id: 'search-input') %>
            <%= button_tag(type: 'submit', id: 'search-users') do %>
              <i class="fas fa-search"></i>
            <% end %>
            <ul class="search-autocomple-ul">

            </ul>
          </div>
          </div>

      </div>
      <div class="new-two">
        <div class='d-flex challenge-step justify-content-center'>
          <div class="numberCircle"><strong>2</strong></div>
          <h3>Choose your Mode</h3>
        </div>

        <div class="row justify-content-center" id="modes">
          <div class="radio-toolbar d-flex">
            <div class="justify-content-center text-center">
              <input hidden='true' type="radio" id="classic" name="RadioFruit" value="classicStuff">
              <label for="classic">
                  <%= image_tag("c.cutlery.png") %>
              </label>
              <h5><strong>Classic</strong></h5>
            </div>
            <div class="justify-content-center text-center">
              <input hidden='true' type="radio" id="creative" name="RadioFruit" value="creativeStuff">
              <label for="creative">
                <%= image_tag("c.lightbulb.png") %>
              </label>
              <h5><strong>Creative</strong></h5>
            </div>
          </div>
        </div>
      </div>

      <div class="container justify-content-center my-3 ml-2" id="ingredients" style="display: none;">
        <h2 class="ing-title">Ingredients:</h2>
          <%= form_tag randomizer_path, remote: true do %>
            <%= image_submit_tag('random.png', class: "shuffle") %>
          <% end %>
          <div class="ingredient-container">
            <div class="card-category" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(https://res.cloudinary.com/dtrwqimx6/image/upload/v1583077961/xccy4qysekpjwcea1wg0.jpg)">
              <% @protein = Ingredient.all.where(category: 'protein').sample%>
              <h4 id="protein" data-id='<%= @protein.id%>'> <%= @protein.name%> </h4>
            </div>
            <div class="card-category" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(https://res.cloudinary.com/dtrwqimx6/image/upload/v1583077970/cvstigl1rjmbispwab27.jpg)">
              <% @dairy = Ingredient.all.where(category: 'dairy').sample%>
              <h4 id="dairy" data-id='<%= @dairy.id%>'> <%= @dairy.name%> </h4>
            </div>
            <div class="card-category" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(https://res.cloudinary.com/dtrwqimx6/image/upload/v1583077945/b5k882v3ajabgn932cxt.jpg)">
              <% @grain = Ingredient.all.where(category: 'grain').sample%>
              <h4 id="grain" data-id='<%= @grain.id%>'> <%= @grain.name%> </h4>
            </div>
            <div class="card-category" style="background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(https://res.cloudinary.com/dtrwqimx6/image/upload/v1583077977/kjonpsm9w3vn3flhlrxj.jpg)">
              <% @vegetable = Ingredient.all.where(category: 'vegetable').sample%>
              <h4 id="vegetable" data-id='<%= @vegetable.id%>'> <%= @vegetable.name%> </h4>
            </div>
          </div>
      </div>


      <!-- </div> -->

      <div class="container justify-content-center my-3" id="recipes" style="display: none;">
        <h3><strong>Your Recipe:</strong></h3>
        <div class="eyalxxxxthebest5454">
        <% @recipe = Recipe.all.sample%>
        <h4 id="recipe" data-id="<%= @recipe.id%>"><strong><%= @recipe.name%></strong> </h4>
        <div class='challenge-image-container'>
          <img src="<%= @recipe.image_url %>" alt="" class="challenge-image">
          <%= form_tag reciper_path, remote: true do %>
            <%= image_submit_tag('random.png', class: "recipe-shuffle") %>
          <% end %>
        </div>
          </div>
      </div>
    </div>
    <div class="justify-content-center btn btn-purple" style="width: 100%; margin-top: 28px; z-index: 3;" id="selector">
      Get Cookin'
    </div>
    <%= link_to "get cooking", challenges_path, method: :post, class: "sneaky-btn", style: "display: none;" %>

    <script>

      // first need event listener on search input
      // for every letter make fetch request for all users based on input (username)
      // if any found return username
      // for every usrname found create new li and add to ul table



      const formatUsers = (users, searchList) => {
          let result = [];
          users.forEach((user) => {
            result.push('<li onclick="handleListClick(this)">' + user.username + '</li>')
          })
          searchList.innerHTML = result.join('');
      }

      const handleAutoComplete = () => {
        let input = document.getElementById('search-input');
        let list = document.querySelector('.search-autocomple-ul');

        input.addEventListener('keyup', (e) => {
          if(e.currentTarget.value == '') {
            list.innerHTML = '';
            return;
          }
          fetch('/take_user' + '?auto=' + e.currentTarget.value)
          .then(res => res.json())
          .then((data )=> {
            if(data.ok){
              formatUsers(data.user, list)
            }else{
              list.innerHTML = '';
            }
          })
        });
      }

      const handleListClick = (elem) => {
          let input = document.getElementById('search-input');
          input.value = elem.innerText;
          elem.remove();
      }




      function displayName(opponent) {
        let otherGuy = document.querySelector("#opponent");
        let imageWrap = document.querySelector('.c-avatar')
        let image = imageWrap.querySelector('img');
        if(image) image.src = opponent.photo;

        // imageWrap.append(image);
        otherGuy.innerHTML = opponent.username;
        otherGuy.dataset.user =  opponent.id;
        // otherGuyPhoto.innerHTML = ;
      }

      let searchButton = document.querySelector('#search-users');

      searchButton.addEventListener('click', () => {
        let query = document.querySelector('#search-input');
        fetch('/take_user' + '?q=' + query.value)
        .then(res => res.json())
        .then((data) =>  {

          if(data.ok){
            console.log(data);
            displayName(data.user)
          }
        });
      })


      let submitButton = document.querySelector("#selector")

      submitButton.addEventListener('click', () => {
        handleChallenge()
      })

      let handleChallenge = () => {
        let challenger = <%= current_user.id %>;
        let opponent = document.getElementById("opponent");
        opponent = opponent.dataset.user;
        let protein = document.getElementById("protein");
        protein = protein.dataset.id
        let grain = document.getElementById("grain");
        grain = grain.dataset.id
        let dairy = document.getElementById("dairy");
        dairy = dairy.dataset.id
        let vegetable = document.getElementById("vegetable");
        vegetable = vegetable.dataset.id
        let recipe = document.getElementById("recipe");
        recipe = recipe.dataset.id
        let isChecked = document.getElementById('classic').checked;
        mode = isChecked ? 'classic' : 'creative';
        let ninja = `/challenges?challenger=${challenger}&opponent=${opponent}&mode=${mode}&recipe=${recipe}&protein=${protein}&grain=${grain}&dairy=${dairy}&vegetable=${vegetable}`
        let target = document.querySelector('.sneaky-btn')
        target.href = ninja;
        target.click()
      }


      let modePicker = document.querySelector("#modes")
      modePicker.addEventListener('click', () => {
        exposer()
      })

      let exposer = () => {
        let button = document.getElementById('classic');
        let recipes = document.getElementById("recipes");
        let ingredients = document.getElementById("ingredients");
        let mode = button.checked ? 'classic' : 'creative';
        let wrap = document.querySelector('#yaniv')
        if (mode == 'classic') {
          ingredients.style.display = "none"
          recipes.style.display = "block";
        } else {
          recipes.style.display = "none"
          ingredients.style.display = "block";
        }
      window.scrollTo(scrollOptions);
      }

      scrollOptions = {
          left: 0,
          top: 500,
          behavior: 'smooth'
      }



      handleAutoComplete()

    </script>

